#!/usr/bin/env node
'use strict';

var program = require('commander');
var command = require('../lib/commands/generateApi/generateApi.js');
var deploy = require('../lib/commands/deployApi/deployApi.js');
var version = require('../lib/util/cli').version();
var netrc = require('netrc')();

var executed = false;

program
  .version(version);

program
  .usage('<command> <options>')
  .command('generateApi <apiProxy>')
  .option('-s, --source <source>', 'openapi File Source.')
  .option('-d, --destination <destination>', 'API Bundle destination location.')
  .option('-D, --deploy', 'Deploy to Apigee Edge')
  .option('-b, --baseuri <baseuri>', 'Apigee Edge EndPoint to Deploy')
  .option('-o, --organization <organization>', 'Apigee Edge Organization to Deploy')
  .option('-e, --environments <environments>', 'Apigee Edge Environment to Deploy')
  .option('-v, --virtualhosts <virtualhosts>', 'Apigee Edge virtual hosts to Deploy')
  .option('-n, --netrc', 'Use credentials in $HOME/.netrc (required)')
  .option('-u, --username <username>', 'Apigee Edge Username to Deploy')
  .option('-p, --password <password>', 'Apigee Edge Password to Deploy')

  .description('Generates Apigee API Bundle')
  .action(function(apiProxy, options) {
    executed = true;
    command.generateApi(apiProxy, options, function(err, reply) {
      if(err) {
        console.log(err);
        process.exit(1);
      }
      else {
        if (options.destination) {
          console.log('Apigee API bundle generated in location ' + options.destination);
        }
        else {
          console.log('Apigee API bundle generated in current directory. ');
        }
        if (options.deploy) {
          deploy.deployApi(apiProxy, options, function (err, reply) {
            if (err) {
              console.log(err);
              process.exit(1);
            }
            else {
              console.log('Deployment to Apigee successfully completed.');
            }
          });
        }
      }
    });
  });

program.on('--help', function(){
  console.log('\n  Examples:');
  console.log('');
  console.log('    $ openapi2apigee generateApi --help');

  console.log('');
  console.log('    $ export ORG=your-org');
  console.log('    $ export ENV=your-env');
  console.log('');
  console.log('Swagger 2.0');
  console.log('    $ export SRC=https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/examples/v2.0/yaml/petstore.yaml');
  console.log('    $ openapi2apigee generateApi petsore-v2 -s $SRC -d ./examples_proxies');
  console.log('    $ openapi2apigee generateApi petsore-v2 -s $SRC -d ./examples_proxies -n -b $URI -o $ORG -e $ENV -v secure -D ');
  console.log('');
  console.log('OAS 3.0.0');
  console.log('    $ export SRC=https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/examples/v3.0/petstore.yaml');
  console.log('    $ openapi2apigee generateApi petsore-v3 -s $SRC -d ./examples_proxies');
  console.log('    $ openapi2apigee generateApi petsore-v3 -s $SRC -d ./examples_proxies -n -b $URI -o $ORG -e $ENV -v secure -D');
  console.log('');
});

program.parse(process.argv);

if (!process.argv.slice(2).length || !executed) {
  program.outputHelp();
  process.exit(1);
}
